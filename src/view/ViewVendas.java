/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasProdutos;
import util.BLDatas;

/**
 *
 * @author Vivian Machado
 */
public class ViewVendas extends javax.swing.JFrame {

    //instacia as classe para carregar, para não ser preciso ficar declarado todahora
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutoses = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    BLDatas bLDatas = new BLDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutoses = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutoses = new ArrayList<>();
    String alterarSalvar;

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        listarProdutos();
        listarClientes();
        setLocationRelativeTo(null);
        carregarVendas();
        preencherCodigoClientePeloCombobox();
        preencherCodigoProdutoPeloCombobox();
        habilitarDesabilitarCampos(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigoCliente = new javax.swing.JTextField();
        jcbNomeCliente = new componentes.UJComboBox();
        jLabel2 = new javax.swing.JLabel();
        jtfNumeroVenda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jcbNomeProduto = new componentes.UJComboBox();
        jtfQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jbAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutosVenda = new javax.swing.JTable();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jtfValorTotal = new javax.swing.JTextField();
        jtfDesconto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jBPVD = new javax.swing.JButton();
        jbRemoverProdutos = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtfValorPago = new componentes.UJTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfTroco = new componentes.UJTextField();
        jLabel13 = new javax.swing.JLabel();
        JcbPagamento = new componentes.UJComboBox();
        jtfEndereco = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfEndereco3 = new javax.swing.JTextField();
        jtfEndereco1 = new javax.swing.JTextField();
        jtfEndereco2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N

        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel1.setText("Código Cli.");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 10, 80, 23);

        jtfCodigoCliente.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusLost(evt);
            }
        });
        jPanel2.add(jtfCodigoCliente);
        jtfCodigoCliente.setBounds(10, 40, 80, 30);

        jcbNomeCliente.setAutocompletar(true);
        jcbNomeCliente.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jcbNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeClienteActionPerformed(evt);
            }
        });
        jPanel2.add(jcbNomeCliente);
        jcbNomeCliente.setBounds(100, 40, 594, 30);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Nome do Cliente:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(100, 10, 132, 23);

        jtfNumeroVenda.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumeroVenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfNumeroVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNumeroVendaActionPerformed(evt);
            }
        });
        jPanel2.add(jtfNumeroVenda);
        jtfNumeroVenda.setBounds(720, 40, 140, 30);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel3.setText("Número da venda:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(720, 10, 140, 23);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel4.setText("Cód.Prod.");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(10, 80, 75, 23);

        jtfCodigoProduto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jPanel2.add(jtfCodigoProduto);
        jtfCodigoProduto.setBounds(10, 110, 80, 30);

        jcbNomeProduto.setAutocompletar(true);
        jcbNomeProduto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jcbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeProdutoActionPerformed(evt);
            }
        });
        jPanel2.add(jcbNomeProduto);
        jcbNomeProduto.setBounds(100, 110, 364, 30);

        jtfQuantidade.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfQuantidadeActionPerformed(evt);
            }
        });
        jPanel2.add(jtfQuantidade);
        jtfQuantidade.setBounds(470, 110, 100, 30);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel5.setText("Quantidade:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(470, 80, 94, 20);

        jbAdicionar.setBackground(new java.awt.Color(204, 255, 204));
        jbAdicionar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/add.png"))); // NOI18N
        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });
        jPanel2.add(jbAdicionar);
        jbAdicionar.setBounds(770, 110, 120, 30);

        jtProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod", "Nome Produto", "Quant.", "Valor Uni.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtProdutosVenda);
        if (jtProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jtProdutosVenda.getColumnModel().getColumn(0).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(0).setMaxWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(2).setMinWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(2).setMaxWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(3).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(3).setMaxWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 150, 877, 273);

        jbCancelar.setBackground(new java.awt.Color(255, 204, 204));
        jbCancelar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/cancel.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(jbCancelar);
        jbCancelar.setBounds(10, 600, 149, 29);

        jbNovo.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/page.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });
        jPanel2.add(jbNovo);
        jbNovo.setBounds(170, 600, 149, 29);

        jbSalvar.setBackground(new java.awt.Color(204, 255, 204));
        jbSalvar.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/disk.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });
        jPanel2.add(jbSalvar);
        jbSalvar.setBounds(730, 600, 149, 29);

        jtfValorTotal.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfValorTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorTotalActionPerformed(evt);
            }
        });
        jPanel2.add(jtfValorTotal);
        jtfValorTotal.setBounds(760, 500, 120, 24);

        jtfDesconto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfDesconto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });
        jtfDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescontoActionPerformed(evt);
            }
        });
        jPanel2.add(jtfDesconto);
        jtfDesconto.setBounds(630, 500, 120, 24);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setText("Valor total:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(760, 470, 80, 21);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setText("Desconto:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(630, 470, 66, 21);

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel9.setText("Nome do Produto:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(100, 80, 138, 23);

        jBPVD.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBPVD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/venda.gif"))); // NOI18N
        jBPVD.setText("PVD");
        jBPVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPVDActionPerformed(evt);
            }
        });
        jPanel2.add(jBPVD);
        jBPVD.setBounds(320, 600, 149, 29);

        jbRemoverProdutos.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbRemoverProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/delete.png"))); // NOI18N
        jbRemoverProdutos.setText("Remover Produto");
        jbRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverProdutosActionPerformed(evt);
            }
        });
        jPanel2.add(jbRemoverProdutos);
        jbRemoverProdutos.setBounds(719, 430, 170, 29);

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel10.setText("Valor Pago:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(630, 530, 120, 21);

        jtfValorPago.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfValorPago.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfValorPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorPagoActionPerformed(evt);
            }
        });
        jPanel2.add(jtfValorPago);
        jtfValorPago.setBounds(630, 560, 120, 24);

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel11.setText("Troco:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(770, 530, 52, 21);

        jtfTroco.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfTroco.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfTroco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTrocoActionPerformed(evt);
            }
        });
        jPanel2.add(jtfTroco);
        jtfTroco.setBounds(760, 560, 120, 24);

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel13.setText("Forma de Pagamento:");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(590, 80, 168, 20);

        JcbPagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dinheiro" }));
        JcbPagamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(JcbPagamento);
        JcbPagamento.setBounds(590, 110, 170, 30);

        jtfEndereco.setBackground(java.awt.SystemColor.control);
        jtfEndereco.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfEndereco.setBorder(null);
        jtfEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEnderecoActionPerformed(evt);
            }
        });
        jPanel2.add(jtfEndereco);
        jtfEndereco.setBounds(10, 460, 290, 30);

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel12.setText("Endereço:");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(10, 430, 97, 23);

        jtfEndereco3.setBackground(java.awt.SystemColor.control);
        jtfEndereco3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfEndereco3.setBorder(null);
        jtfEndereco3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEndereco3ActionPerformed(evt);
            }
        });
        jPanel2.add(jtfEndereco3);
        jtfEndereco3.setBounds(10, 550, 290, 30);

        jtfEndereco1.setBackground(java.awt.SystemColor.control);
        jtfEndereco1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfEndereco1.setBorder(null);
        jtfEndereco1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEndereco1ActionPerformed(evt);
            }
        });
        jPanel2.add(jtfEndereco1);
        jtfEndereco1.setBounds(10, 490, 290, 30);

        jtfEndereco2.setBackground(java.awt.SystemColor.control);
        jtfEndereco2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jtfEndereco2.setBorder(null);
        jtfEndereco2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEndereco2ActionPerformed(evt);
            }
        });
        jPanel2.add(jtfEndereco2);
        jtfEndereco2.setBounds(10, 520, 290, 30);

        jTabbedPane1.addTab("Cadastro", jPanel2);

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel8.setText("Pesquisa:");

        jtfPesquisa.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jtfPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisaActionPerformed(evt);
            }
        });

        jbPesquisa.setBackground(new java.awt.Color(255, 204, 204));
        jbPesquisa.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/find.png"))); // NOI18N
        jbPesquisa.setText("Pesquisa");
        jbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisaActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Cliente", "Data", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtVendas);
        if (jtVendas.getColumnModel().getColumnCount() > 0) {
            jtVendas.getColumnModel().getColumn(0).setMinWidth(110);
            jtVendas.getColumnModel().getColumn(0).setPreferredWidth(110);
            jtVendas.getColumnModel().getColumn(0).setMaxWidth(1110);
            jtVendas.getColumnModel().getColumn(2).setMinWidth(110);
            jtVendas.getColumnModel().getColumn(2).setPreferredWidth(110);
            jtVendas.getColumnModel().getColumn(2).setMaxWidth(110);
        }

        jbExcluir.setBackground(new java.awt.Color(204, 255, 204));
        jbExcluir.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/cross.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/pencil.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img/icones-diversos/famfamfam_silk_icons_v013/page_white_acrobat.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(jbPesquisa)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbImprimir)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar)
                    .addComponent(jbImprimir))
                .addContainerGap(177, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultar/Excluir/Alterar", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutoses = new ArrayList<>();
        listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutoController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
            modelProdutos.setProEstoque(
                    listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProEstoque()
                    + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade());
            listaModelProdutoses.add(modelProdutos);
        }
        if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
                this.carregarVendas();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
            this.carregarVendas();
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        habilitarDesabilitarCampos(true);
        jbSalvar.setEnabled(true);// Ele habilitar o botão salvar
        jtfQuantidade.setText("1");
        this.alterarSalvar = "alterar";
        int linha = jtVendas.getSelectedRow();//pegar a linha selecionada
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);//pegar os valores da linha e coluna
        listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutoController(codigoVenda);//codigoVenda está passando todos os dados para a lista
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
            jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVendas()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProNome(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()
                * listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor()
            });
        }
        somarValorTotalProdutos();
        aplicarTroco();
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        final ViewAguarde carregando = new ViewAguarde();
        carregando.setVisible(true);
        Thread t = new Thread() {
            public void run() {
                try {
                    controllerVendas.gerarRelatorioVenda(codigoVenda);
                    carregando.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao gerar o relatorio! /n", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
        t.start();


    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jtfTrocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTrocoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTrocoActionPerformed

    private void jtfValorPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorPagoActionPerformed
        aplicarTroco();        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorPagoActionPerformed

    private void jbRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverProdutosActionPerformed
        // TODO add your handling code here:

        int linha = jtProdutosVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();
        aplicarTroco();
    }//GEN-LAST:event_jbRemoverProdutosActionPerformed

    private void jBPVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPVDActionPerformed
        new ViewPDV().setVisible(true);        // TOD
    }//GEN-LAST:event_jBPVDActionPerformed

    private void jtfEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEnderecoActionPerformed

    }//GEN-LAST:event_jtfEnderecoActionPerformed

    private void jtfDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescontoActionPerformed

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        // TODO add your handling code here:
        somarValorTotalProdutos();
        aplicarTroco();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jtfValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorTotalActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        habilitarDesabilitarCampos(false);
        int codigoVenda = 0, codigoProduto = 0; //variavel declarada
        double desconto = 0;
        listaModelVendasProdutoses = new ArrayList<>();
        //Tratando o desconto
        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = Double.parseDouble(jtfDesconto.getText());
        }
        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumeroVenda.getText()));
        }
        modelVendas.setCliente(Integer.parseInt(jtfCodigoCliente.getText()));
        try {
            modelVendas.setVenDataVenda(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis()))); //Ele pegar a minha data atual
        } catch (Exception e) {
            //Aqui eu não quero exibir nada
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setVenDesconto(desconto);

        // Aqui ele está diferenciando a hora de salvar e alterar
        if (alterarSalvar.equals("salvar")) {
            //Salvar
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {
                JOptionPane.showMessageDialog(this, "Venda salva com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                //Produto
                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutoses.add(modelVendasProdutos);
                listaModelProdutoses.add(modelProdutos);
            }
            // Salvar os produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses)) {
                //Alterar o estoque de produtos
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses);
                //JOptionPane.showMessageDialog(this, "Produtos da venda salvo com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //ALTERAR INICIO - RETORNAR PARA O ESTOQUE E EXLUIR PRODUTOS DA VENDA
            int linha = jtVendas.getSelectedRow();
            codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutoses = new ArrayList<>();
            listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutoController(codigoVenda);
            for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
                modelProdutos.setProEstoque(
                        listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProEstoque()
                        + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade());
                listaModelProdutoses.add(modelProdutos);
            }
            if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses)) {//alterar o estoque
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {//excluir os produtos da venda
                    //JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //FIM - RETORNAR PARA O ESTOQUE E EXLUIR PRODUTOS DA VENDA

            if (controllerVendas.atualizarVendasController(modelVendas)) {
                JOptionPane.showMessageDialog(this, "Venda alterada com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar a venda!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //Adicionar produtos na lista para salvar
            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                //Produto
                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutoses.add(modelVendasProdutos);
                listaModelProdutoses.add(modelProdutos);
            }
            //SALVAR OS PRODUTOS DA VENDA
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses)) {
                //JOptionPane.showMessageDialog(this, "Produto da venda salva com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos da venda!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        jbSalvar.setEnabled(false);
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        //Habilitar o botão novo para alterar
        jbSalvar.setEnabled(true);
        //Setar variavel alterar salvar para alterar
        alterarSalvar = "salvar";
        limparFormulario();
        habilitarDesabilitarCampos(true);
        jtfDesconto.setText("0");
        jtfValorTotal.setText("0");
        jtfValorPago.setText("0");
        jtfQuantidade.setText("1");
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        dispose();
        habilitarDesabilitarCampos(false);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        //Ele está comparando se o campo está preenchido ou não,quando for mandar adicionar
        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
            //adicionar uma linha  na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            //Aqui está adicionando o que eu quero na tabela
            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getProNome(),
                jtfQuantidade.getText(),
                modelProdutos.getProValor(),
                quantidade * modelProdutos.getProValor() //Aqui a mesma está calculando o valor total
            });
            somarValorTotalProdutos();
            aplicarTroco();
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jtfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfQuantidadeActionPerformed

    }//GEN-LAST:event_jtfQuantidadeActionPerformed

    private void jcbNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeProdutoActionPerformed

        if (jcbNomeProduto.isVisible()) {
            preencherCodigoProdutoPeloCombobox();

        }
    }//GEN-LAST:event_jcbNomeProdutoActionPerformed

    private void jcbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible
        if (jcbNomeProduto.isVisible()) {
            this.preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
        jcbNomeProduto.setSelectedItem(modelProdutos.getProNome());
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jtfNumeroVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNumeroVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNumeroVendaActionPerformed

    private void jcbNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeClienteActionPerformed

        if (jcbNomeCliente.isPopupVisible()) {
            preencherCodigoClientePeloCombobox();
            preencherEnderecoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClienteActionPerformed

    //Quando você clik no nome ele carrega o id do nome.
    private void jcbNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeClientePopupMenuWillBecomeInvisible
        if (jcbNomeCliente.isPopupVisible()) {
            this.preencherCodigoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClientePopupMenuWillBecomeInvisible

    //Quando você dá um tab no id ele carrega o nome.
    private void jtfCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfCodigoCliente.getText()));
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jtfCodigoClienteFocusLost

    private void jtfPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisaActionPerformed

    private void jbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.jtVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jtVendas.setRowSorter(classificador);
        String texto = jtfPesquisa.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }//GEN-LAST:event_jbPesquisaActionPerformed

    private void jtfEndereco3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEndereco3ActionPerformed

    }//GEN-LAST:event_jtfEndereco3ActionPerformed

    private void jtfEndereco1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEndereco1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEndereco1ActionPerformed

    private void jtfEndereco2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEndereco2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEndereco2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    private void preencherCodigoClientePeloCombobox() {
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));//convetendo Id para String e preenche o conbobox
    }

    private void preencherEnderecoClientePeloCombobox() {
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfEndereco.setText(String.valueOf(modelCliente.getCliEndereco()));
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfEndereco1.setText(String.valueOf(modelCliente.getCliBairro()));
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfEndereco2.setText(String.valueOf(modelCliente.getCliCidade()));
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfEndereco3.setText(String.valueOf(modelCliente.getCliUf()));
    }

    private void preencherCodigoProdutoPeloCombobox() {
        modelProdutos = controllerProdutos.retornarProdutoController(jcbNomeProduto.getSelectedItem().toString());
        jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
    }

    /**
     * Preencher ocombobox com todos os clientes
     *
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        jcbNomeCliente.removeAllItems(); //remove todos os item
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbNomeCliente.addItem(listaModelClientes.get(i).getCliNome());  // esse para vai adicionando itens
        }
    }

    /**
     * Preencher combobox produtos
     */
    private void listarProdutos() {
        listaModelProdutoses = controllerProdutos.retornarListaProdutoController();
        jcbNomeProduto.removeAllItems(); //remove todos os item
        for (int i = 0; i < listaModelProdutoses.size(); i++) {
            jcbNomeProduto.addItem(listaModelProdutoses.get(i).getProNome()); // esse para vai adicionando itens
        }
    }

    /**
     * Aplicar desconto ao valor final de venda
     */
    private void aplicarDescontos() {
        try {
            jtfValorTotal.setText(String.valueOf(
                    Double.parseDouble(jtfValorTotal.getText()) - Double.parseDouble(jtfDesconto.getText())));
        } catch (NumberFormatException e) {
            //Não foi fornecido o desconto na venda 
        }
    }

    /**
     * Somar todos os produtos da venda
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) jtProdutosVenda.getValueAt(i, 4);
            soma = soma + valor;
        }
        jtfValorTotal.setText(String.valueOf(soma));
        this.aplicarDescontos(); //Aqui está chamando o Aplicar desconto.
        aplicarTroco();
    }

    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();
        int cont = listaModelVendasClientes.size();
        modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasClientes.get(i).getModelVendas().getIdVenda(),
                listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
                listaModelVendasClientes.get(i).getModelVendas().getVenDataVenda(),
                listaModelVendasClientes.get(i).getModelVendas().getVenValorLiquido()
            });
        }
    }

    /**
     * Limpar formulario de venda
     */
    private void limparFormulario() {
        jtfQuantidade.setText("");
        jtfDesconto.setText("");
        jtfValorTotal.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.setNumRows(0);

    }

    private void aplicarTroco() {
        try {
            jtfTroco.setText(String.valueOf(
                    Double.parseDouble(jtfValorPago.getText()) - Double.parseDouble(jtfValorTotal.getText()))
            );
        } catch (NumberFormatException e) {

        }

    }

    private void habilitarDesabilitarCampos(boolean condicao) {
        jbSalvar.setEnabled(condicao);
        jbAdicionar.setEnabled(condicao);
        jbRemoverProdutos.setEnabled(condicao);
        jBPVD.setEnabled(condicao);

        jtfDesconto.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        jtfEndereco.setEnabled(condicao);
        jtfEndereco1.setEnabled(condicao);
        jtfEndereco2.setEnabled(condicao);
        jtfEndereco3.setEnabled(condicao);
        jtfCodigoCliente.setEnabled(condicao);
        jtfCodigoProduto.setEnabled(condicao);
        jtfValorPago.setEnabled(condicao);
        jtfTroco.setEnabled(condicao);
        jtfNumeroVenda.setEnabled(condicao);
        jtfValorTotal.setEnabled(condicao);
        JcbPagamento.setEnabled(condicao);
        jtProdutosVenda.setEnabled(condicao);

        jcbNomeCliente.setEnabled(condicao);
        jcbNomeProduto.setEnabled(condicao);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componentes.UJComboBox JcbPagamento;
    private javax.swing.JButton jBPVD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisa;
    private javax.swing.JButton jbRemoverProdutos;
    private javax.swing.JButton jbSalvar;
    private componentes.UJComboBox jcbNomeCliente;
    private componentes.UJComboBox jcbNomeProduto;
    private javax.swing.JTable jtProdutosVenda;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfEndereco1;
    private javax.swing.JTextField jtfEndereco2;
    private javax.swing.JTextField jtfEndereco3;
    private javax.swing.JTextField jtfNumeroVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfQuantidade;
    private componentes.UJTextField jtfTroco;
    private componentes.UJTextField jtfValorPago;
    private javax.swing.JTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
